import{watch as _}from"chokidar";import{getDirname as o,path as l}from"vuepress/utils";const h=`
if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updateSearchIndex) {
    __VUE_HMR_RUNTIME__.updateSearchIndex(searchIndex)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ searchIndex }) => {
    __VUE_HMR_RUNTIME__.updateSearchIndex(searchIndex)
  })
}
`,i=async({app:r,isSearchable:p,getExtraFields:c})=>{const t=r.pages.filter(p).map(e=>({title:e.title,headers:e.headers,path:e.path,pathLocale:e.pathLocale,extraFields:c(e)}));let a=`export const SEARCH_INDEX = ${JSON.stringify(t,null,2)}
`;return r.env.isDev&&(a+=h),r.writeTemp("internal/searchIndex.js",a)},d=import.meta.dirname||o(import.meta.url),m=({locales:r={},hotKeys:p=["s","/"],maxSuggestions:c=5,isSearchable:t=()=>!0,getExtraFields:a=()=>[]}={})=>({name:"@vuepress/plugin-search",clientConfigFile:l.resolve(d,"../client/config.js"),define:{__SEARCH_LOCALES__:r,__SEARCH_HOT_KEYS__:p,__SEARCH_MAX_SUGGESTIONS__:c},onPrepared:async e=>{await i({app:e,isSearchable:t,getExtraFields:a})},onWatched:(e,n)=>{const s=_("pages/**/*.js",{cwd:e.dir.temp(),ignoreInitial:!0});s.on("add",()=>{i({app:e,isSearchable:t,getExtraFields:a})}),s.on("change",()=>{i({app:e,isSearchable:t,getExtraFields:a})}),s.on("unlink",()=>{i({app:e,isSearchable:t,getExtraFields:a})}),n.push(s)}});export{i as prepareSearchIndex,m as searchPlugin};
//# sourceMappingURL=index.js.map
